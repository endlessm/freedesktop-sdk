name: freedesktop-sdk

format-version: 14

aliases:
  aom: https://aomedia.googlesource.com/
  chromium: https://chromium.googlesource.com/
  debian_salsa: https://salsa.debian.org/
  ffmpeg: https://git.ffmpeg.org/
  freedesktop: https://gitlab.freedesktop.org/
  freedesktop_people: git://people.freedesktop.org/~wtay/
  github: https://github.com/
  gitlab: https://gitlab.com/
  gnome: https://gitlab.gnome.org/GNOME/
  gnome_archive: https://gitlab.gnome.org/Archive/
  gnupg: https://dev.gnupg.org/source/
  kernel: https://git.kernel.org/pub/scm/
  kitware: https://gitlab.kitware.com/cmake/
  libreoffice: https://git.libreoffice.org/
  nettle: https://git.lysator.liu.se/nettle/
  llvm: https://llvm.org/git/
  repo_or_cz: https://repo.or.cz/
  savannah: https://git.savannah.gnu.org/git/
  sourceware: https://sourceware.org/git/
  tukaani: https://git.tukaani.org/
  xiph: https://git.xiph.org/

  flathub: https://flathub.org/
  ftp_gnu_org: https://ftp.gnu.org/gnu/
  github_files: https://github.com/
  sourceware_pub: https://sourceware.org/pub/

mirrors:
- name: kernel_org
  aliases:
    ftp_gnu_org:
    - https://mirrors.kernel.org/gnu/

- name: gitlab_dot_com_freedesktop__sdk_mirrors
  aliases:
    aom:
    - https://gitlab.com/freedesktop-sdk/mirrors/aom/
    chromium:
    - https://gitlab.com/freedesktop-sdk/mirrors/chromium/
    debian_salsa:
    - https://gitlab.com/freedesktop-sdk/mirrors/debian_salsa/
    ffmpeg:
    - https://gitlab.com/freedesktop-sdk/mirrors/ffmpeg/
    freedesktop_people:
    - https://gitlab.com/freedesktop-sdk/mirrors/freedesktop_people/
    freedesktop:
    - https://gitlab.com/freedesktop-sdk/mirrors/freedesktop/
    github:
    - https://gitlab.com/freedesktop-sdk/mirrors/github/
    gitlab:
    - https://gitlab.com/freedesktop-sdk/mirrors/gitlab/
    gnome_archive:
    - https://gitlab.com/freedesktop-sdk/mirrors/gnome_archive/
    gnome:
    - https://gitlab.com/freedesktop-sdk/mirrors/gnome/
    gnupg:
    - https://gitlab.com/freedesktop-sdk/mirrors/gnupg/
    kernel:
    - https://gitlab.com/freedesktop-sdk/mirrors/kernel/
    kitware:
    - https://gitlab.com/freedesktop-sdk/mirrors/kitware/
    libdaemon:
    - https://gitlab.com/freedesktop-sdk/mirrors/libdaemon/
    libreoffice:
    - https://gitlab.com/freedesktop-sdk/mirrors/libreoffice/
    llvm:
    - https://gitlab.com/freedesktop-sdk/mirrors/llvm/
    nettle:
    - https://gitlab.com/freedesktop-sdk/mirrors/nettle/
    repo_or_cz:
    - https://gitlab.com/freedesktop-sdk/mirrors/repo_or_cz/
    savannah:
    - https://gitlab.com/freedesktop-sdk/mirrors/savannah/
    sourceware:
    - https://gitlab.com/freedesktop-sdk/mirrors/sourceware/
    tukaani:
    - https://gitlab.com/freedesktop-sdk/mirrors/tukaani/
    xiph:
    - https://gitlab.com/freedesktop-sdk/mirrors/xiph/

element-path: elements

fatal-warnings:
- overlaps

variables:
  sysroot: /cross-installation
  tools: /cross

  builddir: bst_build_dir
  conf-deterministic: |
    --enable-deterministic-archives
  conf-link-args: |
    --enable-shared \
    --disable-static
  conf-host: |
    --host=%{host-triplet}
  conf-build: |
    --build=%{build-triplet}
  conf-libtool-force-dlsearch: |
    lt_cv_sys_lib_dlsearch_path_spec="/usr/lib/%{gcc_triplet}"
  host-triplet: "%{triplet}"
  build-triplet: "%{triplet}"
  guessed-triplet: "$(sh /usr/share/gnu-config/config.guess)"
  sbindir: "%{bindir}"
  sysconfdir: "/etc"
  localstatedir: "/var"
  branch: "18.08"
  lib: "lib/%{gcc_triplet}"
  indep-libdir: "%{prefix}/lib"
  debugdir: "%{indep-libdir}/debug"
  sourcedir: "%{debugdir}/source"
  gcc_triplet: "%{gcc_arch}-linux-%{abi}"
  triplet: "%{arch}-unknown-linux-%{abi}"
  gcc_arch: "%{arch}"
  abi: "gnu"

  debug_flags: "-g"
  common_flags: "-O2 %{debug_flags} -pipe"
  build_common_flags: "%{common_flags}"
  build_flags_x86_64: "%{build_common_flags}"
  build_flags_i686: "%{build_common_flags}"
  build_flags_aarch64: "%{build_common_flags}"
  build_flags_arm: "%{build_common_flags}"
  target_common_flags: "%{common_flags} -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches"
  target_flags_x86_64: "-march=x86-64 -mtune=generic %{target_common_flags} -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection"
  target_flags_i686: "-march=i686 -mtune=generic %{target_common_flags} -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection"
  target_flags_aarch64: "%{target_common_flags} -fasynchronous-unwind-tables -fstack-clash-protection"
  target_flags_arm: "%{target_common_flags}"
  ldflags_defaults: "-Wl,-z,relro,-z,now -Wl,--as-needed"

  (?):
  - target_arch == "i686":
      gcc_arch: "i386" # See https://wiki.debian.org/Multiarch/Tuples#Why_not_use_GNU_triplets.3F
  - target_arch == "arm":
      abi: "gnueabihf"
  ca_path: "%{sysconfdir}/ssl/certs/ca-certificates.crt"


  # Arguments for tooling used when stripping debug symbols
  objcopy-link-args: --add-gnu-debuglink
  objcopy-extract-args: |

    --only-keep-debug --compress-debug-sections

  strip-args: |

    --remove-section=.comment --remove-section=.note --strip-unneeded

  strip-binaries: |
    touch source-files
    find "%{install-root}" -type f \
      '(' -perm -111 -o -name '*.so*' \
          -o -name '*.cmxs' -o -name '*.node' ')' \
          -print0 | while read -r -d $'\0' file; do
      read -n4 hdr <"${file}" || continue # check for elf header
      if [ "$hdr" != "$(printf \\x7fELF)" ]; then
        continue
      fi
      if [ -x "%{tools}/%{host-triplet}/bin/objdump" ]; then
         toolchain="%{tools}/%{host-triplet}/bin/"
      fi
      if "${toolchain}objdump" -j .gnu_debuglink -s "${file}" &>/dev/null; then
        continue
      fi
      case "${file}" in
        "%{install-root}%{debugdir}/"*)
          continue
          ;;
        *)
          ;;
      esac
      if [ "$(stat -c "%h" "${file}")" != "1" ]; then
        echo "Stripping files with multiple links can be problematic for reproducibility." 1>&2
        echo "File ${file} has multiple links" 1>&2
        false
      fi
      realpath="$(realpath -s --relative-to="%{install-root}" "${file}")"
      debugfile="%{install-root}%{debugdir}/${realpath}.debug"
      mkdir -p "$(dirname "$debugfile")"
      if [ -x "$(command -v debugedit)" ]; then
        debugedit -i --list-file=source-files.part --base-dir="%{build-root}" --dest-dir="%{sourcedir}/%{element-name}" "${file}"
        cat source-files.part >>source-files
      fi
      "${toolchain}objcopy" %{objcopy-extract-args} "${file}" "$debugfile"
      chmod 644 "$debugfile"
      mode="$(stat -c 0%a "${file}")"
      [ -w "${file}" ] || chmod +w "${file}"
      "${toolchain}strip" %{strip-args} "${file}"
      "${toolchain}objcopy" %{objcopy-link-args} "$debugfile" "${file}"
      chmod "${mode}" "${file}"
    done
    sort -zu  <source-files | while read -r -d $'\0' source; do
      dst="%{install-root}%{sourcedir}/%{element-name}/${source}"
      src="%{build-root}/${source}"
      if [ -d "${src}" ]; then
        install -m0755 -d "${dst}"
        continue
      fi
      [ -f "${src}" ] || continue
      install -m0644 -D "${src}" "${dst}"
    done

environment:
  (?):
    - target_arch == "x86_64":
        CFLAGS:  "%{target_flags_x86_64}"
        CXXFLAGS: "%{target_flags_x86_64}"
        LDFLAGS:  "%{ldflags_defaults}"
    - target_arch == "i686":
        CFLAGS: "%{target_flags_i686}"
        CXXFLAGS: "%{target_flags_i686}"
        LDFLAGS:  "%{ldflags_defaults}"
    - target_arch == "arm":
        CFLAGS:  "%{target_flags_arm}"
        CXXFLAGS: "%{target_flags_arm}"
        LDFLAGS:  "%{ldflags_defaults}"
    - target_arch == "aarch64":
        CFLAGS:  "%{target_flags_aarch64}"
        CXXFLAGS: "%{target_flags_aarch64}"
        LDFLAGS:  "%{ldflags_defaults}"
  LC_ALL: en_US.UTF-8
  PYTHON: "%{bindir}/python3"

  # Python documentation "Hash randomization is intended to provide
  # protection against a denial-of-service caused by carefully-chosen
  # inputs that exploit the worst case performance of a dict
  # construction, O(n^2) complexity. See
  # http://www.ocert.org/advisories/ocert-2011-003.html for details."
  # The attack case isn't relevant for code compilation and this breaks
  # reproducible pycs. Setting seed to 0 is the canonical way to disable
  # hash randomization
  PYTHONHASHSEED: 0

split-rules:
  devel:
    - "%{includedir}"
    - "%{includedir}/**"
    - "%{libdir}/pkgconfig"
    - "%{libdir}/pkgconfig/**"
    - "%{datadir}/pkgconfig"
    - "%{datadir}/pkgconfig/**"
    - "%{datadir}/aclocal"
    - "%{datadir}/aclocal/**"
    - "%{prefix}/lib/cmake"
    - "%{prefix}/lib/cmake/**"
    - "%{libdir}/cmake"
    - "%{libdir}/cmake/**"
    - "%{prefix}/lib/*.a"
    - "%{libdir}/*.a"

  debug:
    - "%{debugdir}/**"

plugins:
  - origin: local
    path: plugins/sources
    sources:
      crate: 0

  - origin: local
    path: plugins/elements
    elements:
      check_forbidden: 0

  - origin: pip
    package-name: buildstream-external
    elements:
      collect_integration: 0
      collect_manifest: 0
      flatpak_image: 0
      flatpak_repo: 0
      tar_element: 0
      x86image: 0
    sources:
      git_tag: 1

options:
  bootstrap_build_arch:
    type: arch
    description: Architecture
    variable: bootstrap_build_arch
    values:
      - arm
      - aarch64
      - i686
      - x86_64

  target_arch:
    type: arch
    description: Architecture
    variable: arch
    values:
      - arm
      - aarch64
      - i686
      - x86_64

artifacts:
  url: https://freedesktop-sdk-cache.codethink.co.uk:11001

elements:
  cmake:
    variables:
      generator: Ninja
  autotools:
    variables:
      remove_libtool_modules: "true"
      remove_libtool_libraries: "true"
      delete_libtool_files: |
          find "%{install-root}" -name "*.la" -print0 | while read -d '' -r file; do
            if grep '^shouldnotlink=yes$' "${file}" &>/dev/null; then
              if %{remove_libtool_modules}; then
                echo "Removing ${file}."
                rm "${file}"
              else
                echo "Not removing ${file}."
              fi
            else
              if %{remove_libtool_libraries}; then
                echo "Removing ${file}."
                rm "${file}"
              else
                echo "Not removing ${file}."
              fi
            fi
          done
      conf-global: |
        %{conf-deterministic} \
        %{conf-link-args} \
        %{conf-build} \
        %{conf-host} \
        %{conf-libtool-force-dlsearch}
      conf-cmd: configure
    config:
      configure-commands:
        - |
          %{autogen}
          if [ -n "%{builddir}" ]; then
            mkdir %{builddir}
            cd %{builddir}
              reldir=..
            else
              reldir=.
          fi
          ${reldir}/%{configure}

      build-commands:
        - |
          if [ -n "%{builddir}" ]; then
            cd %{builddir}
          fi
          %{make}

      install-commands:
        - |
          if [ -n "%{builddir}" ]; then
            cd %{builddir}
          fi
          %{make-install}

        - |
          %{delete_libtool_files}
  meson:
    variables:
      meson-global: |
        --buildtype=plain

      ninja: |
        ninja -v -j ${NINJAJOBS} -C %{build-dir}

sources:
  git_tag:
    config:
      checkout-submodules: False
      track-tags: True
